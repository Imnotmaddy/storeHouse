
//missing trusted driver
entity Driver {
	name String,
    passportId String,
    citizenship String,
}

entity Transporter {
	companyName String
}

entity Sender {
	companyName String
}

entity Storehouse{
}

//What products are stored here?
entity StorageRoom {
	amountOfDistinctProducts Integer,
    type Facility
}

entity Address {
	city String,
    street String,
    houseNumber String,
    apartmentNumber Integer,
}


//Add List<UserRole> 
//name, login, password -
//are in default user
entity AppUser {
	birthdate LocalDate,
    isSuspended Boolean,
    money Double
}


enum Facility {
	REFRIGERATOR,
    OPEN_SPACE,
    HEATED_SPACE,
    ORDINARY_ROOM
}

enum UserRole {
	SYSTEM_ADMIN,
    STOREHOUSE_ADMIN,
    DISPATCHER,
    MANAGER,
    SUPERVISOR,
    OWNER
}

enum DeliveryType{
	Auto,
    Train
}

enum ProductState {
	REGISTRATED,
	APPROVED,
	STORED,
	LOST_BY_TRANSPORTER,
	GONE_FROM_STORAGE,
	STOLEN_FROM_STORAGE,
	TRANSPORTER_SHORTAGE,
	CONFISCATED,
	RECYCLED,
	UNSTORED,
	READY_TO_LEAVE,
	REMOVED_FROM_STORAGE
}

enum ActType{
	THEFT,
    INCONSISTENCE,
    LOSS,
    SHORTAGE,
    WRITE_OFF
}

enum ActionTaken{
	CONFISCATED,
    RECYCLED
}

//add Batch of products manually
entity Act{
	date LocalDate,
    cost Double,
    type ActType
}

entity Product {
	state ProductState,
    daysInStorage Integer,
    cost Double,
    requiredFacility Facility,
    weight Float,
    name String
}

entity Recipient {
	companyName String
}

//List<facility> facilities
entity Transport{
	vehicleNumber String,
    wagonsNumber String,
    deliveryType DeliveryType,
    facility Facility
}
//manually add BatchOfProducts(without jdl
//cuz it's not an entity )
entity TTN{
	serialNumber String
    dateOfCreation LocalDate,
    description String,
    productsAmount Integer,
    numberOfProductEntries Integer,
    dateTimeOfRegistration Instant,
    isAccepted Boolean
}


relationship OneToMany{
Storehouse{rooms} to StorageRoom{storehouse(id)},
TTN{products} to Product
}

//add roles to appUser
relationship OneToOne{
TTN{storehouseDispatcher(name)} to AppUser,
TTN{manager(name)} to AppUser,
TTN{sender(name) required} to AppUser,
TTN{transport(facility) required} to Transport,
TTN{transporter(companyName) required} to Transporter,
TTN{driver(name)} to Driver,
TTN{recipient(companyName)} to Recipient,
Storehouse{owner(name) required} to AppUser,
Storehouse{administrator(name) required} to AppUser,
Storehouse{dispatcher(name) required} to AppUser,
Storehouse{manager(name) required} to AppUser,
Storehouse{supervisor(name) required} to AppUser
Address{user(name)} to AppUser{address},
AppUser{user} to User,
Act{user} to AppUser
}

dto * with mapstruct
service * with serviceClass


